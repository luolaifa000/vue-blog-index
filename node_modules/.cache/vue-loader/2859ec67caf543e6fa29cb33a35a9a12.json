{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\user\\recover.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\user\\recover.vue","mtime":1584589959691},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data () {\r\n    const validatePassCheck = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('确认新密码不能为空'));\r\n      } else if (value !== this.formCustom.password) {\r\n        callback(new Error('两次输入的密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      alert: {\r\n        type: '',\r\n        text: ''\r\n      },\r\n      success: false,\r\n      loading: false,\r\n      loading2: false,\r\n      btnText: '发送邮箱验证码',\r\n      formCustom: {\r\n        email: '',\r\n        captcha: '',\r\n        password: '',\r\n        repassword: ''\r\n      },\r\n      ruleCustom: {\r\n        email: [\r\n          { required: true, message: '邮箱不能为空', trigger: 'change' },\r\n          { type: 'email', message: '请输入正确的电子邮箱', trigger: 'blur' }\r\n        ],\r\n      },\r\n      rulePasswd: {\r\n        captcha: [\r\n          { required: true, message: '验证码不能为空', trigger: 'change' },\r\n        ],\r\n        password: [\r\n          { required: true, message: '密码不能为空', trigger: 'change'}\r\n        ],\r\n        repassword: [\r\n          { required: true, validator: validatePassCheck, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleSubmit (name) {\r\n      this.$refs[name].validate((valid) => {\r\n        if (valid) {\r\n          this.seedEmailFun()\r\n          this.loading = true\r\n        }\r\n      })\r\n    },\r\n    // 发送邮件\r\n    seedEmailFun() {\r\n      let param = {\r\n        email: this.formCustom.email\r\n      }\r\n      this.$post('/api/v2/user/send_email', param).then(res => {\r\n        this.alert = {\r\n          type: 'success',\r\n          text: res.message\r\n        }\r\n        this.loading = false\r\n      }).catch(err =>{\r\n        this.loading = false\r\n        this.btnText = '重新发送邮件'\r\n      })\r\n    },\r\n    // 提交新密码\r\n    codeSubmit(name) {\r\n      this.$refs[name].validate((valid) => {\r\n        if (valid) {\r\n          this.loading2 = true\r\n          this.submitForm()\r\n        }\r\n      })\r\n    },\r\n    submitForm() {\r\n      this.$post('/api/v2/user/check_captcha', this.formCustom).then(res => {\r\n        this.success = true\r\n        this.loading2 = false\r\n      }).catch(err => {\r\n        this.loading2 = false\r\n      })\r\n    },\r\n    // 重置表单\r\n    handleReset (name) {\r\n      this.$refs[name].resetFields();\r\n    }\r\n  }\r\n}\r\n",null]}