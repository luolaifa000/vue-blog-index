{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\user\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\user\\login.vue","mtime":1584589959756},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapActions } from \"vuex\";  // 引入mapState \r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      alert: {\r\n        type: 'success',\r\n        msg: ''\r\n      },\r\n      loading: false,  \r\n      gitHubLoading: false,\r\n      formCustom: {\r\n        name: '',\r\n        password: '',\r\n        type: 'name'\r\n      },\r\n      ruleCustom: {\r\n        name: [\r\n          { required: true, message: '用户名或邮箱不能为空', trigger: 'change' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '密码不能为空', trigger: 'change'}\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'user'\r\n    ])\r\n  },\r\n  created() {\r\n    if (this.$route.query.token){\r\n      this.Token(this.$route.query.token)\r\n      this.UserInfo()\r\n      this.$router.push('/blog')\r\n    }\r\n  },\r\n  mounted() {\r\n    this.formCustom.name = localStorage.getItem('name') || ''\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'Token', 'UserInfo'\r\n    ]),\r\n    handleSubmit (name) {\r\n      this.$refs[name].validate((valid) => {\r\n        if (valid) {\r\n          this.loginFun()\r\n        }\r\n      })\r\n    },\r\n    // 清空输入框\r\n    handleReset (name) {\r\n      this.$refs[name].resetFields();\r\n    },\r\n    loginFun () {\r\n      this.loading = true\r\n      this.formCustom.name.indexOf('@') == -1 ? this.formCustom.type = 'name' : this.formCustom.type = 'email'\r\n\r\n      this.$post('/api/v2/login', this.formCustom).then(res => {\r\n        // this.$Message.success('登录成功！');\r\n        this.$Notice.success({\r\n          title: '亲爱的 '+this.formCustom.name,\r\n          desc: '欢迎回来！！！',\r\n          duration: 3\r\n        });\r\n        this.Token(res.data.token)\r\n        this.UserInfo()\r\n        \r\n        if (this.$route.query.redirect){\r\n          this.$router.push(this.$route.query.redirect)\r\n        } else{\r\n          this.$router.push('/blog')\r\n        }\r\n      }).catch(err => {\r\n        this.loading = false\r\n      })\r\n    },\r\n    githubLogin () {\r\n      this.gitHubLoading = true\r\n      let githubUrl = this.$baseApiUrl + '/github'\r\n\r\n      window.location.href = githubUrl\r\n\r\n      // 弹出 500 * 500 的窗口\r\n      // window.open(githubUrl, 'newwindow', 'height=500, width=500, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no')\r\n\r\n      // //  通过监听，父页面可以拿到子页面传递的token，父(前端页面)，子(小窗)\r\n      // window.addEventListener('message', (e) => {\r\n      //     console.log('调用登录');\r\n      //     this.setLogin(e.data)\r\n      // }, false)\r\n    },\r\n  }\r\n}\r\n",null]}