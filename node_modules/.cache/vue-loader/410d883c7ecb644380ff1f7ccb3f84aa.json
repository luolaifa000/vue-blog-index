{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\user\\register.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\user\\register.vue","mtime":1584589959692},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n  data () {\r\n    const validatePassCheck = (rule, value, callback) => {\r\n      if (value === '') {\r\n        callback(new Error('确认密码不能为空'));\r\n      } else if (value !== this.formCustom.password) {\r\n        callback(new Error('两次输入的密码不一致!'));\r\n      } else {\r\n        callback();\r\n      }\r\n    };\r\n    return {\r\n      laoding: false,\r\n      formCustom: {\r\n        name: '',\r\n        password: '',\r\n        repassword: '',\r\n        email: ''\r\n      },\r\n      ruleCustom: {\r\n        name: [\r\n          { required: true, message: '用户名不能为空', trigger: 'change' }\r\n        ],\r\n        email: [\r\n          { required: true, message: '邮箱不能为空', trigger: 'change' },\r\n          { type: 'email', message: '请输入正确的电子邮箱', trigger: 'change' }\r\n        ],\r\n        password: [\r\n          { required: true, trigger: 'change', message: '密码不能为空', }\r\n        ],\r\n        repassword: [\r\n          { required: true, validator: validatePassCheck, trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleSubmit (name) {\r\n      this.$refs[name].validate((valid) => {\r\n        if (valid) {\r\n          this.register()\r\n        }\r\n      })\r\n    },\r\n    // 清空\r\n    handleReset (name) {\r\n      this.$refs[name].resetFields();\r\n    },\r\n    register() {\r\n      this.laoding = true\r\n      this.$post('/api/v2/signup', this.formCustom).then(res => {\r\n        this.$Message.success(res.message+'，去登录！')\r\n        setTimeout(() => {\r\n          this.$router.push('/login')\r\n        }, 2000)\r\n      }).catch(err => {\r\n        this.laoding = false\r\n      })\r\n    },\r\n  }\r\n}\r\n",null]}