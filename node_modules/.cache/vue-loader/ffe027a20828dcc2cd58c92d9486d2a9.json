{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\manage\\page\\addArticle.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\manage\\page\\addArticle.vue","mtime":1584694751025},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Axios from 'axios'\r\nimport {mapActions, mapGetters} from \"vuex\"\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      title: '写博客',\r\n      blogBanner: '',\r\n      loading: false,\r\n      articleLoading: false,\r\n      form: {\r\n        title: '',\r\n        desc: '',\r\n        img: '',\r\n        content: '',\r\n        classify: '',\r\n        tags: '',\r\n        clicks: '',\r\n        like :'',\r\n        deleted_at: false,\r\n        created_at: new Date()\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'token'\r\n    ]),\r\n    headers() {\r\n      return {\r\n        'Authorization': this.token,\r\n        'X-Requested-With': 'XMLHttpRequest' \r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    if (this.$route.params.id) {\r\n      this.getArticle()\r\n    }\r\n  },\r\n  watch:{\r\n    $route(to,from){\r\n      this.blogBanner = '',\r\n      this.form =  {\r\n        title: '',\r\n        desc: '',\r\n        img: '',\r\n        content: '',\r\n        classify: '',\r\n        tag: '',\r\n        clicks: '',\r\n        like :'',\r\n        deleted_at: false,\r\n        created_at: new Date()\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    addBtn() {\r\n      this.loading = true\r\n      this.$post('/api/v2/article/add', this.form).then(res => {\r\n        this.$message.success(res.message)\r\n        this.$router.push('/articlelist')\r\n        this.loading = false\r\n      }).catch(() => {\r\n        this.loading = false\r\n      })\r\n    },\r\n    getArticle() {\r\n      this.articleLoading = true\r\n      let params = {\r\n        id: this.$route.params.id,\r\n        all: 1\r\n      }\r\n      this.$post('/api/v2/article', params).then(res => {\r\n        console.log(res.data)\r\n        this.articleLoading = false\r\n        this.form = res.data\r\n        this.form.tags = res.data.tags.join(',')\r\n        if (this.form.img) {\r\n          this.blogBanner = this.$staticUrl+this.form.img\r\n        }\r\n      }).catch(() => {\r\n        this.articleLoading = false\r\n      })\r\n    },\r\n    editBtn() {\r\n      this.loading = true\r\n      this.$post('/api/v2/article/edit', this.form).then(res => {\r\n        this.$message.success(res.message)\r\n        this.$router.push('/articlelist')\r\n        this.loading = false\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    // 上传图片，获取图片地址\r\n    handleAvatarSuccess(res, file) {\r\n      // 如果已经有图片则先删除图片\r\n      if (this.form.img) {\r\n        this.handleRemove()\r\n      }\r\n\r\n      this.blogBanner = URL.createObjectURL(file.raw);\r\n      this.$message.success('图片上传成功')\r\n      this.form.img = res.data.url\r\n    },\r\n    // 删除图片\r\n    handleRemove() {\r\n      let param = {image: this.form.img}\r\n      this.$post('/api/v2/image/titleDelete', param).then(res => {\r\n        this.$message.success(res.message)\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    // 限制图片大小和格式\r\n    beforeAvatarUpload(file) {\r\n      const isJPG = file.type == 'image/jpeg' || 'image/png'\r\n      const isLt3M = file.size / 1024 / 1024 < 3\r\n\r\n      if (!isJPG) {\r\n        this.$message.error('上传图片只能是 JPG和png 格式!')\r\n      }\r\n      if (!isLt3M) {\r\n        this.$message.error('上传头像图片大小不能超过 3MB!')\r\n      }\r\n      return isJPG && isLt3M\r\n    },\r\n\r\n    // 绑定@imgAdd event 上传图片\r\n    $imgAdd(pos, $file){\r\n        let formdata = new FormData()\r\n        formdata.append('image', $file)\r\n        Axios({\r\n            url: '/api/v2/image/upload',\r\n            method: 'post',\r\n            data: formdata,\r\n            headers:{\r\n              // 'Content-Type':'multipart/form-data',\r\n              'Authorization': this.token,\r\n              'X-Requested-With': 'XMLHttpRequest'\r\n            }\r\n        }).then((url) => {\r\n          console.log(111, url, url.data.data.url, $file)\r\n            // 第二步.将返回的url替换到文本原位置![...](0) -> ![...](url)\r\n          this.$refs.md.$img2Url(pos, this.$staticUrl+url.data.data.url)\r\n        }).catch(() => {\r\n      })\r\n    },\r\n    // 因为拿不到图片名称，所以无法删除图片\r\n    $imgDel(pos) {\r\n        console.log(pos, '图片名')\r\n        Axios({\r\n            url: '/api/v2/image/delete',\r\n            method: 'post',\r\n            data: {\r\n              image: pos\r\n            },\r\n            headers:{\r\n              'Authorization': this.token,\r\n              'X-Requested-With': 'XMLHttpRequest'\r\n            }\r\n        }).then((url) => {\r\n          console.log(111, url, url.data.data.url, $file)\r\n          this.$refs.md.$img2Url(pos, this.$staticUrl+url.data.data.url)\r\n        }).catch(() => {\r\n      })\r\n    }\r\n  }\r\n}\r\n",null]}