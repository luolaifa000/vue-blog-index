{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js!D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js!D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\page\\detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\page\\detail.vue","mtime":1584589959526},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572402791037},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _defineProperty from \"D:\\\\developer\\\\www\\\\vue-blog-index\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport marked from 'marked';\nimport 'style/message.styl';\nexport default {\n  data: function data() {\n    return {\n      text_loading: true,\n      show: true,\n      loading: true,\n      checked: true,\n      hasclick: false,\n      detail: [],\n      commentList: [],\n      prevArticle: {},\n      nextrAticle: {},\n      comment: {\n        content: '',\n        name: '',\n        article_id: ''\n      },\n      pageModel: {\n        page: 1,\n        sumCount: 10\n      },\n      page: 2,\n      hasMore: true,\n      href: ''\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['user']), {\n    compiledMarkdown: function compiledMarkdown() {\n      return marked(this.detail.content, {\n        sanitize: false\n      });\n    }\n  }),\n  created: function created() {\n    this.href = window.location.href;\n    this.getDetail();\n  },\n  watch: {\n    $route: function $route(to, from) {\n      this.getDetail();\n    }\n  },\n  methods: {\n    getDetail: function getDetail() {\n      var _this = this;\n\n      this.$post('/api/v2/article', this.$route.params).then(function (res) {\n        _this.text_loading = false;\n        _this.detail = res.data;\n        _this.detail.created_at = _this.detail.created_at.substring(0, 10).replace(/-/g, \"/\");\n        _this.comment.article_id = _this.detail.id;\n        _this.prevArticle = res.data.prevArticle[0];\n        _this.nextrAticle = res.data.nextrAticle[0]; // 有评论是才请求这个接口\n\n        if (_this.detail.comment) {\n          _this.getComment();\n        }\n      }).catch(function () {});\n    },\n    // 跳转上下一篇文章\n    goArticle: function goArticle(article) {\n      if (article) {\n        this.text_loading = true;\n        this.$router.push(\"/blog/\".concat(article.id));\n        this.hasclick = false;\n      }\n    },\n    // 点赞\n    giveLike: function giveLike() {\n      var _this2 = this;\n\n      var param = {\n        id: this.detail.id\n      };\n\n      if (!this.hasclick) {\n        this.$post('/api/v2/article/like', param).then(function (res) {\n          _this2.detail.like += 1;\n          _this2.hasclick = true;\n        }).catch(function () {});\n      }\n    },\n    // 获取评论\n    getComment: function getComment() {\n      var _this3 = this;\n\n      var param = _objectSpread({\n        article_id: this.detail.id\n      }, this.pageModel);\n\n      this.$post('/api/v2/comment/read', param).then(function (res) {\n        _this3.commentList = res.data.data;\n        _this3.pageModel.sumCount = res.data.total;\n\n        _this3.commentList.forEach(function (item) {\n          item.content = marked(item.content, {\n            sanitize: false\n          });\n        });\n\n        _this3.loading = false;\n      }).catch(function () {});\n    },\n    // 提交评论\n    submitComment: function submitComment() {\n      var _this4 = this;\n\n      this.$post('/api/v2/comment/add', this.comment).then(function (res) {\n        _this4.comment.content = '';\n        _this4.detail.comment += 1;\n\n        _this4.$Message.success(res.message);\n\n        _this4.getComment();\n      }).catch(function () {});\n    },\n    // 评论分页\n    selectRoleList: function selectRoleList() {\n      this.getComment();\n    },\n    // 删除自己的留言\n    deleteComment: function deleteComment(item) {\n      var _this5 = this;\n\n      this.$post('/api/v2/comment/delete', {\n        id: item.id\n      }).then(function (res) {\n        _this5.commentList.splice(_this5.commentList.indexOf(item), 1);\n\n        _this5.$Message.success(res.message);\n\n        _this5.detail.comment -= 1;\n      }).catch(function () {});\n    }\n  }\n};",null]}