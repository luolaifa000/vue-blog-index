{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js!D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js!D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\page\\message.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\page\\message.vue","mtime":1584589959861},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572402791037},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"D:\\\\developer\\\\www\\\\vue-blog-index\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\";\nimport marked from 'marked';\nimport '@/style/message.styl';\nexport default {\n  data: function data() {\n    return {\n      textarea: '支持markdown语法，尾部2个空格后回车才会换行，最长400个字',\n      autofocus: false,\n      loading: true,\n      messageList: [],\n      message: {\n        content: '',\n        ykname: ''\n      },\n      pageModel: {\n        page: 1,\n        sumCount: 10\n      },\n      page: 2,\n      hasMore: true\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['user', 'banners']), {\n    compiledMarkdown: function compiledMarkdown() {\n      return marked(this.detail.content, {\n        sanitize: false\n      });\n    }\n  }),\n  created: function created() {\n    this.getMessage();\n  },\n  methods: {\n    // 获取留言\n    getMessage: function getMessage() {\n      var _this = this;\n\n      // this.loading = true\n      this.$post('/api/v2/message/list', this.pageModel).then(function (res) {\n        _this.loading = false;\n        _this.pageModel.sumCount = res.data.total;\n        _this.messageList = res.data.data; // 转markdown语法\n\n        _this.messageList.forEach(function (item) {\n          item.content = marked(item.content, {\n            sanitize: false\n          }); // 转换换行\n          // item.content = item.content.replace(/\\n/g, '<br>')\n        });\n      }).catch(function () {});\n    },\n    selectRoleList: function selectRoleList() {\n      this.getMessage();\n    },\n    // 提交留言\n    submitMessage: function submitMessage() {\n      var _this2 = this;\n\n      this.$post('/api/v2/message/add', this.message).then(function (res) {\n        _this2.getMessage();\n\n        _this2.$Message.success(res.message);\n\n        _this2.message = {\n          content: '',\n          name: ''\n        };\n      }).catch(function () {});\n    },\n    // 删除自己的留言\n    deleteComment: function deleteComment(item) {\n      var _this3 = this;\n\n      this.$post('/api/v2/message/delete', {\n        id: item.id\n      }).then(function (res) {\n        _this3.messageList.splice(_this3.messageList.indexOf(item), 1);\n\n        _this3.$Message.success(res.message);\n      }).catch(function () {});\n    },\n    // 回复\n    reply: function reply(id) {\n      this.autofocus = true;\n      this.message.content = '';\n      this.message.reply_id = id;\n      this.textarea = \"\\u56DE\\u590D \".concat(id, \"\\u697C\");\n    }\n  }\n};",null]}