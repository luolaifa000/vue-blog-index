{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js!D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js!D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\manage\\page\\addArticle.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\manage\\page\\addArticle.vue","mtime":1584589959691},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572402791037},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\developer\\\\www\\\\vue-blog-index\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Axios from 'axios';\nimport { mapActions, mapGetters } from \"vuex\";\nexport default {\n  data: function data() {\n    return {\n      title: '写博客',\n      blogBanner: '',\n      loading: false,\n      articleLoading: false,\n      form: {\n        title: '',\n        desc: '',\n        img: '',\n        content: '',\n        classify: '',\n        tags: '',\n        clicks: '',\n        like: '',\n        deleted_at: false,\n        created_at: new Date()\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['token']), {\n    headers: function headers() {\n      return {\n        'Authorization': this.token,\n        'X-Requested-With': 'XMLHttpRequest'\n      };\n    }\n  }),\n  created: function created() {\n    if (this.$route.params.id) {\n      this.getArticle();\n    }\n  },\n  watch: {\n    $route: function $route(to, from) {\n      this.blogBanner = '', this.form = {\n        title: '',\n        desc: '',\n        img: '',\n        content: '',\n        classify: '',\n        tag: '',\n        clicks: '',\n        like: '',\n        deleted_at: false,\n        created_at: new Date()\n      };\n    }\n  },\n  methods: {\n    addBtn: function addBtn() {\n      var _this = this;\n\n      this.loading = true;\n      this.$post('/api/v2/article/add', this.form).then(function (res) {\n        _this.$message.success(res.message);\n\n        _this.$router.push('/articlelist');\n      });\n    },\n    getArticle: function getArticle() {\n      var _this2 = this;\n\n      this.articleLoading = true;\n      var params = {\n        id: this.$route.params.id,\n        all: 1\n      };\n      this.$post('/api/v2/article', params).then(function (res) {\n        console.log(res.data);\n        _this2.articleLoading = false;\n        _this2.form = res.data;\n        _this2.form.tags = res.data.tags.join(',');\n\n        if (_this2.form.img) {\n          _this2.blogBanner = _this2.$staticUrl + _this2.form.img;\n        }\n      });\n    },\n    editBtn: function editBtn() {\n      var _this3 = this;\n\n      this.loading = true;\n      this.$post('/api/v2/article/edit', this.form).then(function (res) {\n        _this3.$message.success(res.message);\n\n        _this3.$router.push('/articlelist');\n      });\n    },\n    // 上传图片，获取图片地址\n    handleAvatarSuccess: function handleAvatarSuccess(res, file) {\n      // 如果已经有图片则先删除图片\n      if (this.form.img) {\n        this.handleRemove();\n      }\n\n      this.blogBanner = URL.createObjectURL(file.raw);\n      this.$message.success('图片上传成功');\n      this.form.img = res.data.url;\n    },\n    // 删除图片\n    handleRemove: function handleRemove() {\n      var _this4 = this;\n\n      var param = {\n        image: this.form.img\n      };\n      this.$post('/api/v2/image/delete', param).then(function (res) {\n        _this4.$message.success(res.message);\n      });\n    },\n    // 限制图片大小和格式\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type == 'image/jpeg' || 'image/png';\n      var isLt3M = file.size / 1024 / 1024 < 3;\n\n      if (!isJPG) {\n        this.$message.error('上传图片只能是 JPG和png 格式!');\n      }\n\n      if (!isLt3M) {\n        this.$message.error('上传头像图片大小不能超过 3MB!');\n      }\n\n      return isJPG && isLt3M;\n    },\n    // 绑定@imgAdd event 上传图片\n    $imgAdd: function $imgAdd(pos, $file) {\n      var _this5 = this;\n\n      var formdata = new FormData();\n      formdata.append('image', $file);\n      Axios({\n        url: '/api/v2/image/upload',\n        method: 'post',\n        data: formdata,\n        headers: {\n          // 'Content-Type':'multipart/form-data',\n          'Authorization': this.token,\n          'X-Requested-With': 'XMLHttpRequest'\n        }\n      }).then(function (url) {\n        console.log(111, url, url.data.data.url, $file); // 第二步.将返回的url替换到文本原位置![...](0) -> ![...](url)\n\n        _this5.$refs.md.$img2Url(pos, _this5.$staticUrl + url.data.data.url);\n      });\n    },\n    // 因为拿不到图片名称，所以无法删除图片\n    $imgDel: function $imgDel(pos) {\n      var _this6 = this;\n\n      console.log(pos, '图片名');\n      Axios({\n        url: '/api/v2/image/delete',\n        method: 'post',\n        data: {\n          image: pos\n        },\n        headers: {\n          'Authorization': this.token,\n          'X-Requested-With': 'XMLHttpRequest'\n        }\n      }).then(function (url) {\n        console.log(111, url, url.data.data.url, $file);\n\n        _this6.$refs.md.$img2Url(pos, _this6.$staticUrl + url.data.data.url);\n      });\n    }\n  }\n};",null]}