{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js!D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js!D:\\developer\\www\\vue-blog-index\\src\\store\\modules\\blog.js","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\store\\modules\\blog.js","mtime":1584589757520},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572402791037},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\developer\\\\www\\\\vue-blog-index\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport http from '@/utils/httpIndex';\nvar state = {\n  webinfo: \"\",\n  tag: \"\",\n  classify: \"\",\n  banners: \"\"\n}; // 获取state的数据\n\nvar getters = {\n  webInfo: function webInfo(state) {\n    return state.webinfo;\n  },\n  tag: function tag(state) {\n    return state.tag;\n  },\n  classify: function classify(state) {\n    return state.classify;\n  },\n  banners: function banners(state) {\n    return state.banners;\n  }\n}; // 更新state的数据\n\nvar mutations = {\n  WEBINFO: function WEBINFO(state, data) {\n    state.webinfo = data;\n  },\n  TAG: function TAG(state, data) {\n    state.tag = data;\n    state.classify = '';\n  },\n  CLASSIFY: function CLASSIFY(state, data) {\n    state.classify = data;\n    state.tag = '';\n  },\n  BANNERS: function BANNERS(state, data) {\n    state.banners = data;\n  }\n}; // 更新state数据的动作\n\nvar actions = {\n  WebInfo: function () {\n    var _WebInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, data) {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return http.get('/api/v2/webinfo/read');\n\n            case 3:\n              res = _context.sent;\n              commit('WEBINFO', res.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function WebInfo(_x, _x2) {\n      return _WebInfo.apply(this, arguments);\n    }\n\n    return WebInfo;\n  }(),\n  Tag: function Tag(_ref2, data) {\n    var commit = _ref2.commit;\n    commit('TAG', data);\n  },\n  Classify: function Classify(_ref3, data) {\n    var commit = _ref3.commit;\n    commit('CLASSIFY', data);\n  },\n  Banners: function () {\n    var _Banners = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref4, data) {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context2.next = 3;\n              return http.post('/api/v2/ad', {\n                type: 'banner'\n              });\n\n            case 3:\n              res = _context2.sent;\n              commit('BANNERS', res.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function Banners(_x3, _x4) {\n      return _Banners.apply(this, arguments);\n    }\n\n    return Banners;\n  }()\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",null]}