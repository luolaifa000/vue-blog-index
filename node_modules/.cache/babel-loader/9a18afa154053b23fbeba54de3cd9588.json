{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js!D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js!D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\user\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\index\\user\\login.vue","mtime":1584589959756},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572402791037},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"D:\\\\developer\\\\www\\\\vue-blog-index\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapActions } from \"vuex\"; // 引入mapState \n\nexport default {\n  data: function data() {\n    return {\n      alert: {\n        type: 'success',\n        msg: ''\n      },\n      loading: false,\n      gitHubLoading: false,\n      formCustom: {\n        name: '',\n        password: '',\n        type: 'name'\n      },\n      ruleCustom: {\n        name: [{\n          required: true,\n          message: '用户名或邮箱不能为空',\n          trigger: 'change'\n        }],\n        password: [{\n          required: true,\n          message: '密码不能为空',\n          trigger: 'change'\n        }]\n      }\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['user'])),\n  created: function created() {\n    if (this.$route.query.token) {\n      this.Token(this.$route.query.token);\n      this.UserInfo();\n      this.$router.push('/blog');\n    }\n  },\n  mounted: function mounted() {\n    this.formCustom.name = localStorage.getItem('name') || '';\n  },\n  methods: _objectSpread({}, mapActions(['Token', 'UserInfo']), {\n    handleSubmit: function handleSubmit(name) {\n      var _this = this;\n\n      this.$refs[name].validate(function (valid) {\n        if (valid) {\n          _this.loginFun();\n        }\n      });\n    },\n    // 清空输入框\n    handleReset: function handleReset(name) {\n      this.$refs[name].resetFields();\n    },\n    loginFun: function loginFun() {\n      var _this2 = this;\n\n      this.loading = true;\n      this.formCustom.name.indexOf('@') == -1 ? this.formCustom.type = 'name' : this.formCustom.type = 'email';\n      this.$post('/api/v2/login', this.formCustom).then(function (res) {\n        // this.$Message.success('登录成功！');\n        _this2.$Notice.success({\n          title: '亲爱的 ' + _this2.formCustom.name,\n          desc: '欢迎回来！！！',\n          duration: 3\n        });\n\n        _this2.Token(res.data.token);\n\n        _this2.UserInfo();\n\n        if (_this2.$route.query.redirect) {\n          _this2.$router.push(_this2.$route.query.redirect);\n        } else {\n          _this2.$router.push('/blog');\n        }\n      }).catch(function (err) {\n        _this2.loading = false;\n      });\n    },\n    githubLogin: function githubLogin() {\n      this.gitHubLoading = true;\n      var githubUrl = this.$baseApiUrl + '/github';\n      window.location.href = githubUrl; // 弹出 500 * 500 的窗口\n      // window.open(githubUrl, 'newwindow', 'height=500, width=500, top=0, left=0, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=n o, status=no')\n      // //  通过监听，父页面可以拿到子页面传递的token，父(前端页面)，子(小窗)\n      // window.addEventListener('message', (e) => {\n      //     console.log('调用登录');\n      //     this.setLogin(e.data)\n      // }, false)\n    }\n  })\n};",null]}