{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js!D:\\developer\\www\\vue-blog-index\\src\\utils\\httpIndex.js","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\utils\\httpIndex.js","mtime":1584502969285},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131}],"contextDependencies":[],"result":["import axios from 'axios';\nimport router from '@/modules/index/router/router';\nimport { Notice } from 'iview';\nimport store from \"../store/index\"; // 配置开发和生产的请求接口\n\nvar service = axios.create({\n  // baseURL: process.env.VUE_APP_URL,\n  timeout: 10000\n}); // 设置header请求头，发起请求前做的事情\n\nservice.interceptors.request.use(function (config) {\n  config.headers['Authorization'] = store.state.user.token;\n  config.headers['X-Requested-With'] = 'XMLHttpRequest';\n  return config;\n}, function (error) {\n  // console.log(error) // for debug\n  Promise.reject(error);\n}); // respone拦截器，发起请求后做的事情\n\nservice.interceptors.response.use(function (res) {\n  // 当有新的token时自动更新新的token\n  if (res.headers.authorization) {\n    store.dispatch(\"Token\", res.headers.authorization);\n  } // window.vm.$loading.hide()\n  // 统一处理错误\n  // 在这里对返回的数据进行处理\n\n\n  if (res.data.status == 'success') {\n    return Promise.resolve(res.data);\n  } else {\n    Notice.error({\n      title: '错误提示',\n      desc: res.data.message,\n      duration: 2\n    }); // Message({\n    //   message: res.data.message,\n    //   type: 'error',\n    //   duration: 2000\n    // })\n  } // 打印错误信息\n\n\n  return Promise.reject(res.data);\n}, function (error) {\n  if (error.response.status == 401) {\n    // 登录过期\n    Notice.warning({\n      title: '登录提示',\n      desc: error.response.data.message,\n      duration: 2,\n      onClose: function onClose() {\n        store.dispatch(\"Logout\");\n        router.push({\n          path: '/login',\n          query: {\n            redirect: window.location.hash.substr(1)\n          }\n        });\n      }\n    }); // Message({\n    //   message: error.response.data.message,\n    //   type: 'error',\n    //   duration: 2000,\n    //   onClose() {\n    //     store.dispatch(\"Logout\");\n    //     router.push({ \n    //       path: '/login', \n    //       query: { redirect: window.location.hash.substr(1) }\n    //     })\n    //   },\n    // })\n  } else if (error.response.status == 422) {\n    // token过期\n    Notice.warning({\n      title: '温馨提示',\n      desc: error.response.data.message,\n      duration: 2\n    });\n    setTimeout(function () {\n      router.push({\n        path: \"/login\",\n        query: {\n          redirect: window.location.hash.substr(1)\n        }\n      });\n    }, 1500);\n  } else if (error.response.status == 403) {\n    // 没有权限\n    Notice.warning({\n      title: '用户权限提示',\n      desc: error.response.data.message,\n      duration: 2,\n      onClose: function onClose() {\n        store.dispatch(\"Logout\");\n        router.push('/login');\n      }\n    });\n  } else if (error.response.status == 500) {\n    // 服务器连接失败\n    Notice.error({\n      title: '网络提示',\n      desc: '服务器连接失败，请稍后再试',\n      duration: 2\n    });\n  } else {\n    Notice.error({\n      title: '错误提示 ' + error.response.status,\n      desc: error.response.data.message,\n      duration: 2\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default service;",{"version":3,"sources":["D:/developer/www/vue-blog-index/src/utils/httpIndex.js"],"names":["axios","router","Notice","store","service","create","timeout","interceptors","request","use","config","headers","state","user","token","error","Promise","reject","response","res","authorization","dispatch","data","status","resolve","title","desc","message","duration","warning","onClose","push","path","query","redirect","window","location","hash","substr","setTimeout"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport router from '@/modules/index/router/router'\r\nimport { Notice } from 'iview'\r\nimport store from \"../store/index\"\r\n\r\n// 配置开发和生产的请求接口\r\nconst service = axios.create({\r\n  // baseURL: process.env.VUE_APP_URL,\r\n  timeout: 10000\r\n})\r\n\r\n// 设置header请求头，发起请求前做的事情\r\nservice.interceptors.request.use(\r\n  config => {\r\n    config.headers['Authorization'] = store.state.user.token\r\n    config.headers['X-Requested-With'] = 'XMLHttpRequest'\r\n    return config\r\n  },\r\n  error => {\r\n    // console.log(error) // for debug\r\n    Promise.reject(error)\r\n  },\r\n)\r\n\r\n// respone拦截器，发起请求后做的事情\r\nservice.interceptors.response.use(\r\n  res => {\r\n    // 当有新的token时自动更新新的token\r\n    if (res.headers.authorization){\r\n      store.dispatch(\"Token\", res.headers.authorization);\r\n    }\r\n\r\n    // window.vm.$loading.hide()\r\n    // 统一处理错误\r\n    // 在这里对返回的数据进行处理\r\n    if (res.data.status == 'success') {\r\n      return Promise.resolve(res.data)\r\n    } else {\r\n      Notice.error({\r\n        title: '错误提示',\r\n        desc: res.data.message,\r\n        duration: 2\r\n      });\r\n      // Message({\r\n      //   message: res.data.message,\r\n      //   type: 'error',\r\n      //   duration: 2000\r\n      // })\r\n    }\r\n    // 打印错误信息\r\n    return Promise.reject(res.data)\r\n  },\r\n  error => {\r\n    if (error.response.status == 401) {\r\n      // 登录过期\r\n      Notice.warning({\r\n        title: '登录提示',\r\n        desc: error.response.data.message,\r\n        duration: 2,\r\n        onClose() {\r\n          store.dispatch(\"Logout\");\r\n          router.push({\r\n            path: '/login',\r\n            query: { redirect: window.location.hash.substr(1) }\r\n          })\r\n        },\r\n      });\r\n      // Message({\r\n      //   message: error.response.data.message,\r\n      //   type: 'error',\r\n      //   duration: 2000,\r\n      //   onClose() {\r\n      //     store.dispatch(\"Logout\");\r\n      //     router.push({ \r\n      //       path: '/login', \r\n      //       query: { redirect: window.location.hash.substr(1) }\r\n      //     })\r\n      //   },\r\n      // })\r\n    } else if (error.response.status == 422) {\r\n      // token过期\r\n      Notice.warning({\r\n        title: '温馨提示',\r\n        desc: error.response.data.message,\r\n        duration: 2,\r\n      });\r\n      setTimeout(() => {\r\n        router.push({\r\n            path: \"/login\",\r\n            query: { redirect: window.location.hash.substr(1) }\r\n        });\r\n      }, 1500)\r\n    } else if (error.response.status == 403) {\r\n      // 没有权限\r\n      Notice.warning({\r\n        title: '用户权限提示',\r\n        desc: error.response.data.message,\r\n        duration: 2,\r\n        onClose() {\r\n          store.dispatch(\"Logout\");\r\n          router.push('/login')\r\n        },\r\n      });\r\n    } else if (error.response.status == 500) {\r\n      // 服务器连接失败\r\n      Notice.error({\r\n        title: '网络提示',\r\n        desc: '服务器连接失败，请稍后再试',\r\n        duration: 2,\r\n      });\r\n    } else {\r\n      Notice.error({\r\n        title: '错误提示 ' + error.response.status,\r\n        desc: error.response.data.message,\r\n        duration: 2,\r\n      });\r\n    }\r\n    return Promise.reject(error)\r\n  },\r\n)\r\n\r\n\r\nexport default service\r\n"]}]}