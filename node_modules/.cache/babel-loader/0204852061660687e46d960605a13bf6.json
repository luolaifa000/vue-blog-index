{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js!D:\\developer\\www\\vue-blog-index\\src\\store\\modules\\blog.js","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\store\\modules\\blog.js","mtime":1584589757520},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"D:\\\\developer\\\\www\\\\vue-blog-index\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport http from '@/utils/httpIndex';\nvar state = {\n  webinfo: \"\",\n  tag: \"\",\n  classify: \"\",\n  banners: \"\"\n}; // 获取state的数据\n\nvar getters = {\n  webInfo: function webInfo(state) {\n    return state.webinfo;\n  },\n  tag: function tag(state) {\n    return state.tag;\n  },\n  classify: function classify(state) {\n    return state.classify;\n  },\n  banners: function banners(state) {\n    return state.banners;\n  }\n}; // 更新state的数据\n\nvar mutations = {\n  WEBINFO: function WEBINFO(state, data) {\n    state.webinfo = data;\n  },\n  TAG: function TAG(state, data) {\n    state.tag = data;\n    state.classify = '';\n  },\n  CLASSIFY: function CLASSIFY(state, data) {\n    state.classify = data;\n    state.tag = '';\n  },\n  BANNERS: function BANNERS(state, data) {\n    state.banners = data;\n  }\n}; // 更新state数据的动作\n\nvar actions = {\n  WebInfo: function () {\n    var _WebInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, data) {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return http.get('/api/v2/webinfo/read');\n\n            case 3:\n              res = _context.sent;\n              commit('WEBINFO', res.data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function WebInfo(_x, _x2) {\n      return _WebInfo.apply(this, arguments);\n    }\n\n    return WebInfo;\n  }(),\n  Tag: function Tag(_ref2, data) {\n    var commit = _ref2.commit;\n    commit('TAG', data);\n  },\n  Classify: function Classify(_ref3, data) {\n    var commit = _ref3.commit;\n    commit('CLASSIFY', data);\n  },\n  Banners: function () {\n    var _Banners = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref4, data) {\n      var commit, res;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context2.next = 3;\n              return http.post('/api/v2/ad', {\n                type: 'banner'\n              });\n\n            case 3:\n              res = _context2.sent;\n              commit('BANNERS', res.data);\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function Banners(_x3, _x4) {\n      return _Banners.apply(this, arguments);\n    }\n\n    return Banners;\n  }()\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["D:/developer/www/vue-blog-index/src/store/modules/blog.js"],"names":["http","state","webinfo","tag","classify","banners","getters","webInfo","mutations","WEBINFO","data","TAG","CLASSIFY","BANNERS","actions","WebInfo","commit","get","res","Tag","Classify","Banners","post","type"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,mBAAjB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,OAAO,EAAE,EADG;AAEZC,EAAAA,GAAG,EAAE,EAFO;AAGZC,EAAAA,QAAQ,EAAE,EAHE;AAIZC,EAAAA,OAAO,EAAE;AAJG,CAAd,C,CAOA;;AACA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,iBAAAN,KAAK;AAAA,WAAIA,KAAK,CAACC,OAAV;AAAA,GADA;AAEdC,EAAAA,GAAG,EAAE,aAAAF,KAAK;AAAA,WAAIA,KAAK,CAACE,GAAV;AAAA,GAFI;AAGdC,EAAAA,QAAQ,EAAE,kBAAAH,KAAK;AAAA,WAAIA,KAAK,CAACG,QAAV;AAAA,GAHD;AAIdC,EAAAA,OAAO,EAAE,iBAAAJ,KAAK;AAAA,WAAGA,KAAK,CAACI,OAAT;AAAA;AAJA,CAAhB,C,CAOA;;AACA,IAAMG,SAAS,GAAG;AAChBC,EAAAA,OADgB,mBACRR,KADQ,EACDS,IADC,EACK;AACnBT,IAAAA,KAAK,CAACC,OAAN,GAAgBQ,IAAhB;AACD,GAHe;AAIhBC,EAAAA,GAJgB,eAIZV,KAJY,EAILS,IAJK,EAIC;AACfT,IAAAA,KAAK,CAACE,GAAN,GAAYO,IAAZ;AACAT,IAAAA,KAAK,CAACG,QAAN,GAAiB,EAAjB;AACD,GAPe;AAQhBQ,EAAAA,QARgB,oBAQPX,KARO,EAQAS,IARA,EAQM;AACpBT,IAAAA,KAAK,CAACG,QAAN,GAAiBM,IAAjB;AACAT,IAAAA,KAAK,CAACE,GAAN,GAAY,EAAZ;AACD,GAXe;AAYhBU,EAAAA,OAZgB,mBAYRZ,KAZQ,EAYDS,IAZC,EAYK;AACnBT,IAAAA,KAAK,CAACI,OAAN,GAAgBK,IAAhB;AACD;AAde,CAAlB,C,CAiBA;;AACA,IAAMI,OAAO,GAAG;AACRC,EAAAA,OADQ;AAAA,kGACYL,IADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACEM,cAAAA,MADF,QACEA,MADF;AAAA;AAAA,qBAEMhB,IAAI,CAACiB,GAAL,CAAS,sBAAT,CAFN;;AAAA;AAENC,cAAAA,GAFM;AAGZF,cAAAA,MAAM,CAAC,SAAD,EAAYE,GAAG,CAACR,IAAhB,CAAN;;AAHY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAKdS,EAAAA,GALc,sBAKET,IALF,EAKQ;AAAA,QAAhBM,MAAgB,SAAhBA,MAAgB;AACpBA,IAAAA,MAAM,CAAC,KAAD,EAAQN,IAAR,CAAN;AACD,GAPa;AAQdU,EAAAA,QARc,2BAQOV,IARP,EAQa;AAAA,QAAhBM,MAAgB,SAAhBA,MAAgB;AACzBA,IAAAA,MAAM,CAAC,UAAD,EAAaN,IAAb,CAAN;AACD,GAVa;AAWRW,EAAAA,OAXQ;AAAA,oGAWYX,IAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAWEM,cAAAA,MAXF,SAWEA,MAXF;AAAA;AAAA,qBAYMhB,IAAI,CAACsB,IAAL,CAAU,YAAV,EAAwB;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAxB,CAZN;;AAAA;AAYNL,cAAAA,GAZM;AAaZF,cAAAA,MAAM,CAAC,SAAD,EAAYE,GAAG,CAACR,IAAhB,CAAN;;AAbY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAkBA,eAAe;AAACT,EAAAA,KAAK,EAALA,KAAD;AAAQK,EAAAA,OAAO,EAAPA,OAAR;AAAiBE,EAAAA,SAAS,EAATA,SAAjB;AAA4BM,EAAAA,OAAO,EAAPA;AAA5B,CAAf","sourcesContent":["import http from '@/utils/httpIndex'\r\n\r\nconst state = {\r\n  webinfo: \"\",\r\n  tag: \"\",\r\n  classify: \"\",\r\n  banners: \"\"\r\n}\r\n\r\n// 获取state的数据\r\nconst getters = {\r\n  webInfo: state => state.webinfo,\r\n  tag: state => state.tag,\r\n  classify: state => state.classify,\r\n  banners: state=> state.banners\r\n}\r\n\r\n// 更新state的数据\r\nconst mutations = {\r\n  WEBINFO(state, data) {\r\n    state.webinfo = data\r\n  },\r\n  TAG(state, data) {\r\n    state.tag = data\r\n    state.classify = ''\r\n  },\r\n  CLASSIFY(state, data) {\r\n    state.classify = data\r\n    state.tag = ''\r\n  },\r\n  BANNERS(state, data) {\r\n    state.banners = data\r\n  }\r\n}\r\n\r\n// 更新state数据的动作\r\nconst actions = {\r\n  async WebInfo({ commit }, data) {\r\n    const res = await http.get('/api/v2/webinfo/read')\r\n    commit('WEBINFO', res.data)\r\n  },\r\n  Tag({ commit }, data) {\r\n    commit('TAG', data)\r\n  },\r\n  Classify({ commit }, data) {\r\n    commit('CLASSIFY', data)\r\n  },\r\n  async Banners({ commit }, data) {\r\n    const res = await http.post('/api/v2/ad', {type: 'banner'})\r\n    commit('BANNERS', res.data)\r\n  }\r\n}\r\n\r\n\r\nexport default {state, getters, mutations, actions}\r\n\r\n"]}]}