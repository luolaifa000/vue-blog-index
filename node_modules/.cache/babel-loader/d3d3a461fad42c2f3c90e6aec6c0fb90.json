{"remainingRequest":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js!D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js!D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\developer\\www\\vue-blog-index\\src\\modules\\manage\\page\\users.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\developer\\www\\vue-blog-index\\src\\modules\\manage\\page\\users.vue","mtime":1584589959825},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1572402791037},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\babel-loader\\lib\\index.js","mtime":1565229057131},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1555406884439},{"path":"D:\\developer\\www\\vue-blog-index\\node_modules\\vue-loader\\lib\\index.js","mtime":1584631609333}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport page from '@/components/page';\nexport default {\n  components: {\n    page: page\n  },\n  data: function data() {\n    return {\n      loading: true,\n      Users: [],\n      pageModel: {\n        page: 1,\n        sumCount: 10\n      }\n    };\n  },\n  created: function created() {\n    this.getUsers();\n  },\n  methods: {\n    getUsers: function getUsers() {\n      var _this = this;\n\n      this.loading = true;\n      this.$post('/api/v2/user/list', this.pageModel).then(function (res) {\n        _this.Users = res.data.data;\n        _this.pageModel.sumCount = res.data.total;\n        _this.loading = false;\n      }).catch(function () {});\n    },\n    selectRoleList: function selectRoleList() {\n      this.getUsers();\n    },\n    // 查看用户详情\n    detail: function detail(id, row) {\n      var params = {\n        id: id\n      };\n      this.$post('/api/v2/user', params).then(function (res) {\n        console.log(res);\n      }).catch(function () {});\n    } // // 获取项目产品菜单\n    // getmixMenu() {\n    //   mixppMenu().then(res => {\n    //     // this.menuList = res.data.data\n    //   })\n    // },\n    // // 新增菜单\n    // plusNav(item) {\n    //   event.stopPropagation()\n    //   this.$prompt('请输入新增的类目名称', '提示', {}).then(({ value }) => {\n    //     let param = {\n    //       icon: '',\n    //       name: value,\n    //       parentId: item.id\n    //     }\n    //     if (value == null || !Trim(value)) {\n    //       this.$message.error('不能为空')\n    //     } else {\n    //       addMenu(param).then(res => {\n    //         if (res.data.code == 200) {\n    //           this.getmixMenu()\n    //           this.$message.success('新增菜单成功!')\n    //         } else {\n    //           this.$message.error('新增菜单失败!')\n    //         }\n    //       })\n    //     }\n    //   }).catch(() => {})\n    // },\n    // // 删除菜单\n    // minusNav(item) {\n    //   event.stopPropagation()\n    //   this.$confirm('是否删除该类目?', '提示', {\n    //     type: 'warning'\n    //   }).then(() => {\n    //     delMenu(item.id).then(res => {\n    //       if (res.data.code == 200) {\n    //         this.getmixMenu()\n    //         this.$message.success(res.data.msg)\n    //       } else {\n    //         this.$message.error(res.data.msg)\n    //       }\n    //     })\n    //   }).catch(() => {})\n    // },\n    // // 修改菜单\n    // editNav(item, name) {\n    //   event.stopPropagation()\n    //   this.$prompt('请输入修改的类目名称', '提示', {\n    //     inputValue: name\n    //   }).then(({ value }) => {\n    //     if (value == null || !Trim(value)) {\n    //       this.$message.error('不能为空')\n    //     } else {\n    //       editMenu(item.id, value).then(res => {\n    //         if (res.data.code == 200) {\n    //           this.getmixMenu()\n    //           this.$message.success('修改菜单成功!')\n    //         } else {\n    //           this.$message.error('修改菜单失败!')\n    //         }\n    //       })\n    //     }\n    //   }).catch(() => {})\n    // },\n    // handleSelect(key, keyPath) {\n    //   this.openindex = key\n    // },\n    // handleOpen(key, keyPath) {\n    //   this.openindex = key\n    // },\n    // handleClose(key, keyPath) {\n    //   this.openindex = ''\n    // },\n    // navtitle(index) {\n    //   this.openindex = this.menuList[index].url\n    // },\n    // // 改变菜单时得到列表数据\n    // changeMenu(child) {\n    //   console.log(child);\n    //   this.MenuParam = {\n    //     parentId: child.id\n    //   }\n    //   this.getprojectList()\n    // },\n    // // 获取项目列表\n    // getprojectList() {\n    //   getproject(this.pageModel, this.MenuParam).then(res => {\n    //     this.pageModel.sumCount = res.data.data.total\n    //     this.projectList = res.data.data.rows\n    //   })\n    // },\n    // //搜素客户\n    // searchBtn() {\n    // },\n    // addBtn() {\n    //   this.$router.push('project/addProject')\n    // },\n    // // 编辑项目\n    // editBtn(index, row) {\n    //   this.$router.push('project/edit/' + row.id)\n    // },\n    // selectRoleList() {\n    //   this.getprojectList()\n    // }\n\n  }\n};",null]}